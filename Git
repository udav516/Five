# Урок 3 “Работа с удалёнными репозиториями”

Git - локальный репозиторий

GitHub - удалённый репозиторий

Перед началом необходимо создать свой аккаунт на GitHub

                                                   Взять чужой репозиторий с GitHub:

- На рабочем столе создаём папку, открываем её в Visual Studio Code и включаем терминал(Вид/Терминал)
- На GitHub через поиск находим известный репозиторий с необходимой папкой
- В зелёной кнопке **Code** во вкладке HTTPS копируем адрес репозитория
- В терминале Visual Studio Code вводим git status и наблюдаем отсутствие локального репозитория

git clone скопированный адрес - сделали копию и скачали папку из удалённого репозитория

cd название скачанной папки - перешли в папку с удалённого репозитория

                                               Отправить свой репозиторий на GitHub:

- На рабочем столе создаём папку, открываем её в Visual Studio Code и включаем терминал(Вид/Терминал)

git init - активируем Git и создаём в папке скрытую папку .git

- В папке создаём новый файл, в нём печатаем заглавление и сохраняем(CTRL+S)

git add  название файла - отслеживание файла. Для удобства ввода названия файла пишут первые два символа и жмут клавишу Tab

git commit -m “Initial commit” - добавили изменения с комментарием “Initial commit”

- В своём аккаунте на GitHub создаём новый репозиторий:
    1. В правом верхнем углу нажимаем знак плюс(+)
    2. Нажимаем на New repository
    3. Во вкладке Repository name* вписать название
    4. Нажимаем на зелёную кнопку Create repository
- В отрывшемся окне GitHub предлагает три варианта дальнейших действий:
    1. …or create a new repository on the command line(создать новый репозиторий через терминал и начать работать)
    2. …or push a existing repository from the command line(существующий локальный репозиторий привязать к удалённому)
    3. …or import code from another repository(импортировать код из другого репозитория)
- Привяжем локальный репозиторий к удалённому, используя поочерёдно команды показанные на экране под заголовком в пунтке 2
- В терминале вводим следующие команды:
    1. git remote add origin адрес удалённого репозитория - связка локального репозитория с удалённым
    2. git branch -M main - указание основной ветки
    3. git push -u origin main - направить из локального репозитория в удалённый

# При первой отправке появляется запрос на авторизацию Git с GitHub или GitLab

- Обновили страницу в GitHub  и убедились о наличии отправленной папки с файлом

                                          Практика по отправке  файлов с Git на GitHub:

- Вносим изменения в текущий файл и сохраняем(CTRL+S)

git add  название файла - отслеживание файла. Для удобства ввода названия файла пишут первые два символа и жмут клавишу Tab

git commit -m “Важный текст про тефтельку” - добавили изменения с комментарием “Важный текст про тефтельку”

git status - вызвали текущий статус версии Git и убедились в отсутствии ошибок

git push - направили изменения из локального репозитория в удалённый

- Обновили страницу в GitHub и убедились в изменениях

                                            Практика по отправке файлов с GitHub на Git:

- В середине правой части экрана на GitHub нажимаем на рисунок карандаша(Edit this file)
- Вносим изменения, пишем коммит в графе Commit changes и нажимаем на зелёную кнопку Commit changes

git pull - сгрузили актуальную версию файла с GitHub и слили её с текущей версией на локальном репозитории

git log - вызвали журнал коммитов и увидели актуальные изменения

                                   Подача заявки на слияния кода из разных веток(Pull request:

- В поиске на GitHub находим необходимый репозиторий с проектом
- В правом верхнем углу нажимаем кнопку **fork**(вилка) ****создаём копию этого репозитория на своём аккаунте
- В зелёной кнопке **Code** во вкладке HTTPS копируем адрес репозитория
- В Visual Studio Code открываем папку с имеющейся в ней слиты с GitHub репозиторием и вводим команду для скачивания копии файла с удалённого репозитория

git clone скопированный адрес - сделали копию и скачали папку из удалённого репозитория

cd название скачанной папки - перешли в папку с удалённого репозитория

git branch description - создали ветку description для внесения изменений в скачанный файл

git checkout description - перешли на созданную ветку

- В папке создали новый файл [README.md](http://README.md) и записали в него определённый текст и сохранили(CTRL+S)

git add  название файла - отслеживание файла. Для удобства ввода названия файла пишут первые два символа и жмут клавишу Tab

git commit -m “Добавили описание к проекту” - добавили изменения с комментарием “Добавили описание к проекту”

git push - направили изменения из локального репозитория в удалённый

- Git предложил другой адрес который необходимо ввести

git push --set-upstream origin description  - направили изменения из локального репозитория в адрес удалённого

- Переходим на сайт GitHub, обновляем страничку и отследили изменения на сайте
- Нажимаем на появившуюся зелёную кнопку Compare & pull request. Если она не появилась, то производим следующие действия:
    1. Нажимаем на кнопку с ветками (**branches**)
    2. В графе ****Your branches**** нажимаем на кнопку **New pull request**
- Убедились в отсутствии конфликта (**Able to merge**)
- Добавили описание и пожелание
- Нажали на зелёную кнопку **Create pull request** и направили предложение с изменениями хозяину изначального файла
